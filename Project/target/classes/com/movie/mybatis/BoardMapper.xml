<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.movie.mybatis.BoadMapper">
	<!-- 리스트 -->
	<select id="getAllBoard" parameterType="hashMap"
		resultType="ReplyBoardBean">
		SELECT * FROM (
		SELECT B.*, ROWNUM AS NUM FROM (SELECT * FROM REPLYBOARD ORDER BY REF DESC,
		RELEVEL ASC) B)
		WHERE NUM <![CDATA[>=]]>
		#{start} AND NUM <![CDATA[<=]]>
		#{end}
	</select>
	
	
	<!-- 전체 게시글 수 -->
	<select id="getTotal" resultType="Integer">
		SELECT COUNT(*) AS TOTAL FROM REPLYBOARD
	</select>
	
	<!-- 새글쓸때 제일 큰 ref를 구하기 위한 거 -->
	<select id="getMaxRef" resultType="Integer">
		SELECT NVL(MAX(REF),1) FROM REPLYBOARD
	</select>

	<!-- 새글 쓰기 -->
	<insert id="insertBoard" parameterType="ReplyBoardBean">
		<!-- 시퀀스를 직접 입력 못함. 그래서 SYSDBA가 가지고 있는 DUAL Table을 이용한 편법 사용 -->
		<selectKey keyProperty="no" resultType="Integer" order="BEFORE">
			SELECT REPLYBOARD_SEQ.NEXTVAL FROM DUAL
		</selectKey>
		INSERT INTO REPLYBOARD VALUES (
										#{no},
										#{name},
										#{email},
										#{subject},
										#{password},
										SYSDATE,
										#{ref},
										#{reStep},
										#{reLevel},
										#{readCount},
										#{contents}
									   )
	</insert>
	
	<!-- readCount증가 -->
	<update id="updateReadCount" parameterType="Integer">
		UPDATE REPLYBOARD SET READCOUNT = READCOUNT + 1 WHERE NO = #{no}
	</update>
	
	<!-- 글 하나 뽑아오기 -->
	<select id="getSelectOneBoard" parameterType="Integer" resultType="ReplyBoardBean">
		SELECT * FROM REPLYBOARD WHERE NO = #{no}
	</select>
	
	<!-- 글 수정 -->
	<update id="updateBoard" parameterType="ReplyBoardBean">
		UPDATE REPLYBOARD SET NAME=#{name},
		                      EMAIL=#{email},
		                      SUBJECT=#{subject},
		                      CONTENTS=#{contents} 
		                      WHERE NO = #{no}
	</update>
	
	<!-- ref와 level update -->
	<update id="updateRefAndLevel" parameterType="ReplyBoardBean">
		UPDATE REPLYBOARD SET RELEVEL = RELEVEL + 1 WHERE REF = #{ref} AND RELEVEL > #{reLevel}
	</update>
	
	<insert id="rewriteBoard" parameterType="ReplyBoardBean">
		<selectKey keyProperty="no" resultType="Integer" order="BEFORE">
			SELECT REPLYBOARD_SEQ.NEXTVAL FROM DUAL
		</selectKey>
		INSERT INTO REPLYBOARD VALUES ( #{no},
										#{name},
										#{email},
										#{subject},
										#{password},
										SYSDATE,
										#{ref},
										#{reStep},
										#{reLevel},
										#{readCount},
										#{contents}
										)
	</insert>
	
	<!-- 비밀번호 뽑아오기 -->
	<select id="getPasswordBoard" parameterType="Integer" resultType="String">
		SELECT PASSWORD FROM REPLYBOARD WHERE NO = #{no}
	</select>
	
	<!-- 글삭제 -->
	<delete id="deleteBoard" parameterType="Integer">
		DELETE FROM REPLYBOARD WHERE NO = #{no}
	</delete>
	
	
	<!-- member -->
	
	<select id="showAllMember" resultType="MemberBean">
		SELECT * FROM MEMBER ORDER BY NO DESC
	</select>
	
	<!--<select id="getSelectOneAdmin" resultType="AdminBean" parameterType="Integer">
		SELECT * FROM MEMBER WHERE NO = #{no}
	</select>-->
	<select id="getSelectOneMember" resultType="MemberBean" parameterType="Integer">
		SELECT * FROM MEMBER WHERE NO = #{no}
	</select>
	<select id="getPasswordMember" resultType="String" parameterType="Integer">
		SELECT PASSWORD FROM MEMBER WHERE NO = #{no}
	</select>
	
	<delete id="deleteMember" parameterType="Integer">
		DELETE FROM MEMBER WHERE NO = #{no}
	</delete>
	
	<update id="updateMember" parameterType="MemberBean">
		UPDATE MEMBER SET NAME = #{name},
		                    EMAIL = #{email},
		                    PHONE = #{phone},
		                    INTEREST = #{interest},
		                    AGE = #{age} WHERE NO = #{no}
	</update>
	<insert id="insertMember" parameterType="MemberBean">
		INSERT INTO MEMBER VALUES (MEMBER_SEQ.NEXTVAL,
									#{id},
									#{name},
									#{password},
									#{email},
									#{phone},
									#{interest},
									#{age},
									#{profileImg},
									3,
									sysdate
									)
	</insert>
	
	<select id="idCheck" parameterType="String" resultType="Integer">
		SELECT COUNT(*) AS COUNT FROM MEMBER WHERE ID = #{ID}
	</select>
	
	<select id="getLoginMember" parameterType="MemberBean" resultType="MemberBean">
		SELECT * FROM MEMBER WHERE ID = #{id} AND PASSWORD = #{password}
	</select>
	
	<insert id="insertAdmin" parameterType="AdminBean">
		INSERT INTO ADMIN VALUES (ADMIN_SEQ.NEXTVAL,
									#{id},
									#{name},
									#{password},
									#{email},
									#{phone},
									#{interest},
									#{age},
									#{profileImg}
							
									)
	</insert>
</mapper>







