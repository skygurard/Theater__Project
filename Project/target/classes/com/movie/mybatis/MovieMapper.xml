<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.movie.mybatis.MovieMapper">
	<!-- 영화 리스트 -->
	<select id= "getAllMovie" parameterType="hashMap" resultType="MovieBean">
		SELECT *
		FROM (
	        SELECT A.*,
	            ROWNUM AS RNUM
	        FROM (
	                SELECT  NO
	                      , TITLE
	                      , DIRECTOR
	                      , ACTOR
	                      , RELEASEDATE
	                      , ENDDATE
	                      , RUNNINGTIME
	                      , COUNTRY
	                      , INFO
	                      , POSTERIMG
	                      , GENRE
	                      , AGE
	                FROM MOVIE
	                WHERE 1=1
	                	AND DB_STATUS = 'A'
	                <if test ="search != null and search != '' ">
	                	<choose>
	                		<when test = " search == 'ALL' ">
	                			AND (TITLE LIKE '%'||#{word}||'%' OR DIRECTOR LIKE '%'||#{word}||'%' OR ACTOR LIKE '%'||#{word}||'%')
	                		</when>
                			<when test = " search == 'TITLE'">
                				AND TITLE LIKE '%'||#{word}||'%'
                			</when>
                			<when test = " search == 'DIRECTOR'">
                				AND DIRECTOR LIKE '%'||#{word}||'%'
                			</when>
                			<when test = " search == 'ACTOR' ">
                				AND ACTOR LIKE '%'||#{word}||'%'
                			</when>
	                	</choose>
	                </if>
	                <if test ="currYn != null and currYn != '' ">
	                	<if test ='currYn ==  "Y" '>
	                		AND TO_CHAR(SYSDATE , 'YYYY-MM-DD' ) BETWEEN RELEASEDATE AND ENDDATE
	                	</if>
	                </if>
<!-- 		                		AND TO_CHAR( SYSDATE  , 'YYYY-MM-DD' ) <![CDATA[<]]> RELEASEDATE // 개봉예정작 -->
	                ORDER BY NO DESC
	            ) A 
	        WHERE ROWNUM <![CDATA[<=]]> #{end}
		    )
		WHERE RNUM <![CDATA[>=]]> #{start}
	</select>
	
	<!-- 삭제된 영화 리스트 -->
	<select id= "getDeletedMovie" parameterType="hashMap" resultType="MovieBean">
		SELECT *
		FROM (
	        SELECT A.*,
	            ROWNUM AS RNUM
	        FROM (
	                SELECT  NO
	                      , TITLE
	                      , DIRECTOR
	                      , ACTOR
	                      , RELEASEDATE
	                      , ENDDATE
	                      , RUNNINGTIME
	                      , COUNTRY
	                      , INFO
	                      , POSTERIMG
	                      , GENRE
	                      , AGE
	                FROM MOVIE
	                WHERE 1=1
	                	AND DB_STATUS = 'D'
	                <if test ="search != null and search != '' ">
	                	<choose>
	                		<when test = " search == 'ALL' ">
	                			AND (TITLE LIKE '%'||#{word}||'%' OR DIRECTOR LIKE '%'||#{word}||'%' OR ACTOR LIKE '%'||#{word}||'%')
	                		</when>
                			<when test = " search == 'TITLE'">
                				AND TITLE LIKE '%'||#{word}||'%'
                			</when>
                			<when test = " search == 'DIRECTOR'">
                				AND DIRECTOR LIKE '%'||#{word}||'%'
                			</when>
                			<when test = " search == 'ACTOR' ">
                				AND ACTOR LIKE '%'||#{word}||'%'
                			</when>
	                	</choose>
	                </if>
	                
	                <if test ="currYn != null and currYn != '' ">
	                	<if test ='currYn ==  "Y" '>
	                		AND TO_CHAR(SYSDATE , 'YYYY-MM-DD' ) BETWEEN RELEASEDATE AND ENDDATE
	                	</if>
	                </if>
<!-- 		                		AND TO_CHAR( SYSDATE  , 'YYYY-MM-DD' ) <![CDATA[<]]> RELEASEDATE // 개봉예정작 -->
	                ORDER BY NO DESC
	            ) A 
	        WHERE ROWNUM <![CDATA[<=]]> #{end}
		    )
		WHERE RNUM <![CDATA[>=]]> #{start}
	</select>
	
	<!-- 영화등록 -->
	<insert id = "insertMovie" parameterType="MovieBean">
		INSERT INTO MOVIE(
			  NO
            , TITLE
            , DIRECTOR
            , ACTOR
            , RELEASEDATE
            , ENDDATE
            , RUNNINGTIME
            , COUNTRY
            , INFO
            , POSTERIMG
            , GENRE
            , AGE
            , DB_STATUS
		)
		VALUES (
			  MOVIE_SEQ.NEXTVAL
			, #{title}
			, #{director}
			, #{actor}
			, #{releaseDate}
			, #{endDate}
			, #{runningTime}
			, #{country}
			, #{info}
			, #{posterImg}
			, #{genre}
			, #{age}
			, 'A'
		)
	</insert>
	
	<!-- 영화 정보 뽑아오기 -->
	<select id = "getSelectOneMovie" parameterType="Integer" resultType="MovieBean">
		SELECT  NO
              , TITLE
              , DIRECTOR
              , ACTOR
              , RELEASEDATE
              , ENDDATE
              , RUNNINGTIME
              , COUNTRY
              , INFO
              , POSTERIMG
              , GENRE
              , AGE
		FROM MOVIE
		WHERE NO = #{no}
	</select>
	
	
	<select id= "showAllMovie" parameterType="hashMap" resultType="MovieBean">
		SELECT *
		        FROM (
	                  SELECT  NO
	                        , TITLE
	                        , AGE
	                        , POSTERIMG
	                  FROM MOVIE
	                  ORDER BY NO DESC
		             ) 
	</select>
	
	<!-- 영화 삭제 -->
	<update id="deleteMovie" parameterType="MovieBean">
		UPDATE MOVIE
		SET
		DB_STATUS = 'D'
		WHERE NO  = #{no}
	</update>
	
	<!-- 삭제된 영화 복원 -->
	<update id="restoreMovie" parameterType="MovieBean">
		UPDATE MOVIE
		SET
		DB_STATUS = 'A'
		WHERE NO  = #{no}
			
	</update>
	
	<!-- 영화 수정 -->
	<update id="modifyMovie" parameterType="MovieBean">
		UPDATE MOVIE SET
			  TITLE 	  = #{title}
            , DIRECTOR 	  = #{director}
            , ACTOR 	  = #{actor}
            , RELEASEDATE = #{releaseDate}
            , ENDDATE 	  = #{endDate}
            , RUNNINGTIME = #{runningTime}
            , COUNTRY 	  = #{country}
            , INFO 		  = #{info}
            , POSTERIMG   = #{posterImg}
            , GENRE 	  = #{genre}
            , AGE 		  = #{age}
		WHERE NO 		  = #{no}
	</update>

	<!-- 전체 영화리스트 수 -->
	<select id="getTotalMovie" resultType="Integer">
		SELECT COUNT(*) AS TOTAL FROM MOVIE
	</select>
	
<!-- 	영화 영구삭제 쿼리 -->		
<!-- 	<delete id="deleteMovie" parameterType="Integer"> -->
<!-- 		DELETE FROM MOVIE WHERE NO = #{no} -->
<!-- 	</delete> -->
</mapper>
